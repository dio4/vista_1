##################################################
# file: FileService_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      C:\pydev\Python25\wsdl2py.bat -s http://portal:8000/StattalonFileService.svc?wsdl
#
##################################################

from ZSI.schema import GED
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
IFileService_ServiceReady_InputMessage = GED("http://tempuri.org/", "ServiceReady").pyclass

IFileService_ServiceReady_OutputMessage = GED("http://tempuri.org/", "ServiceReadyResponse").pyclass

IFileService_Testing_InputMessage = GED("http://tempuri.org/", "Testing").pyclass

IFileService_Testing_OutputMessage = GED("http://tempuri.org/", "TestingResponse").pyclass

UploadFileData = GED("http://tempuri.org/", "UploadFileData").pyclass


# Service Skeletons
class FileService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/StattalonFileService.svc', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_ServiceReady(self, ps, **kw):
        request = ps.Parse(IFileService_ServiceReady_InputMessage.typecode)
        return request,IFileService_ServiceReady_OutputMessage()

    soapAction['http://tempuri.org/IFileService/ServiceReady'] = 'soap_ServiceReady'
    root[(IFileService_ServiceReady_InputMessage.typecode.nspname,IFileService_ServiceReady_InputMessage.typecode.pname)] = 'soap_ServiceReady'

    def soap_Testing(self, ps, **kw):
        request = ps.Parse(IFileService_Testing_InputMessage.typecode)
        return request,IFileService_Testing_OutputMessage()

    soapAction['http://tempuri.org/IFileService/Testing'] = 'soap_Testing'
    root[(IFileService_Testing_InputMessage.typecode.nspname,IFileService_Testing_InputMessage.typecode.pname)] = 'soap_Testing'

    def soap_FileUpload(self, ps, **kw):
        request = ps.Parse(UploadFileData.typecode)
        # NO output
        return request,None

    soapAction['http://tempuri.org/IFileService/FileUpload'] = 'soap_FileUpload'
    root[(UploadFileData.typecode.nspname,UploadFileData.typecode.pname)] = 'soap_FileUpload'

