# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CashRegisterWindow.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_CashRegisterWindow(object):
    def setupUi(self, CashRegisterWindow):
        CashRegisterWindow.setObjectName(_fromUtf8("CashRegisterWindow"))
        CashRegisterWindow.resize(978, 591)
        self.gridLayout = QtGui.QGridLayout(CashRegisterWindow)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.gbLogging = QtGui.QGroupBox(CashRegisterWindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gbLogging.sizePolicy().hasHeightForWidth())
        self.gbLogging.setSizePolicy(sizePolicy)
        self.gbLogging.setObjectName(_fromUtf8("gbLogging"))
        self.gridLayout_6 = QtGui.QGridLayout(self.gbLogging)
        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
        self.edtLogging = QtGui.QPlainTextEdit(self.gbLogging)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edtLogging.sizePolicy().hasHeightForWidth())
        self.edtLogging.setSizePolicy(sizePolicy)
        self.edtLogging.setLineWrapMode(QtGui.QPlainTextEdit.NoWrap)
        self.edtLogging.setReadOnly(True)
        self.edtLogging.setObjectName(_fromUtf8("edtLogging"))
        self.gridLayout_6.addWidget(self.edtLogging, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.gbLogging, 1, 0, 1, 2)
        self.verticalLayout = QtGui.QVBoxLayout()
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.gbECRInfo = QtGui.QGroupBox(CashRegisterWindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gbECRInfo.sizePolicy().hasHeightForWidth())
        self.gbECRInfo.setSizePolicy(sizePolicy)
        self.gbECRInfo.setObjectName(_fromUtf8("gbECRInfo"))
        self.gridLayout_2 = QtGui.QGridLayout(self.gbECRInfo)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.lblPassword = QtGui.QLabel(self.gbECRInfo)
        self.lblPassword.setObjectName(_fromUtf8("lblPassword"))
        self.gridLayout_2.addWidget(self.lblPassword, 2, 0, 1, 2)
        self.lblModeName = QtGui.QLabel(self.gbECRInfo)
        self.lblModeName.setObjectName(_fromUtf8("lblModeName"))
        self.gridLayout_2.addWidget(self.lblModeName, 3, 2, 1, 3)
        self.lblECRNumberCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblECRNumberCaption.setObjectName(_fromUtf8("lblECRNumberCaption"))
        self.gridLayout_2.addWidget(self.lblECRNumberCaption, 0, 0, 1, 2)
        self.lblFiscalEnabledStateCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblFiscalEnabledStateCaption.setObjectName(_fromUtf8("lblFiscalEnabledStateCaption"))
        self.gridLayout_2.addWidget(self.lblFiscalEnabledStateCaption, 5, 0, 1, 2)
        self.lblFiscalEnabledState = QtGui.QLabel(self.gbECRInfo)
        self.lblFiscalEnabledState.setObjectName(_fromUtf8("lblFiscalEnabledState"))
        self.gridLayout_2.addWidget(self.lblFiscalEnabledState, 5, 2, 1, 3)
        self.btnBrowseECR = QtGui.QToolButton(self.gbECRInfo)
        self.btnBrowseECR.setObjectName(_fromUtf8("btnBrowseECR"))
        self.gridLayout_2.addWidget(self.btnBrowseECR, 0, 5, 1, 1)
        self.lblModeCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblModeCaption.setObjectName(_fromUtf8("lblModeCaption"))
        self.gridLayout_2.addWidget(self.lblModeCaption, 3, 0, 1, 2)
        self.lblDriverNameCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblDriverNameCaption.setObjectName(_fromUtf8("lblDriverNameCaption"))
        self.gridLayout_2.addWidget(self.lblDriverNameCaption, 7, 0, 1, 2)
        self.lblModelCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblModelCaption.setObjectName(_fromUtf8("lblModelCaption"))
        self.gridLayout_2.addWidget(self.lblModelCaption, 8, 0, 1, 2)
        self.lblDriverName = QtGui.QLabel(self.gbECRInfo)
        self.lblDriverName.setObjectName(_fromUtf8("lblDriverName"))
        self.gridLayout_2.addWidget(self.lblDriverName, 7, 2, 1, 3)
        self.lblModel = QtGui.QLabel(self.gbECRInfo)
        self.lblModel.setObjectName(_fromUtf8("lblModel"))
        self.gridLayout_2.addWidget(self.lblModel, 8, 2, 1, 3)
        self.lblINN = QtGui.QLabel(self.gbECRInfo)
        self.lblINN.setObjectName(_fromUtf8("lblINN"))
        self.gridLayout_2.addWidget(self.lblINN, 9, 2, 1, 1)
        self.lblINNCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblINNCaption.setObjectName(_fromUtf8("lblINNCaption"))
        self.gridLayout_2.addWidget(self.lblINNCaption, 9, 0, 1, 1)
        self.lblCurrentSession = QtGui.QLabel(self.gbECRInfo)
        self.lblCurrentSession.setObjectName(_fromUtf8("lblCurrentSession"))
        self.gridLayout_2.addWidget(self.lblCurrentSession, 10, 2, 1, 1)
        self.lblCurrentCheckNumber = QtGui.QLabel(self.gbECRInfo)
        self.lblCurrentCheckNumber.setObjectName(_fromUtf8("lblCurrentCheckNumber"))
        self.gridLayout_2.addWidget(self.lblCurrentCheckNumber, 11, 2, 1, 1)
        self.lblCurrentSessionCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblCurrentSessionCaption.setObjectName(_fromUtf8("lblCurrentSessionCaption"))
        self.gridLayout_2.addWidget(self.lblCurrentSessionCaption, 10, 0, 1, 1)
        self.lblCurrentCheckNumberCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblCurrentCheckNumberCaption.setObjectName(_fromUtf8("lblCurrentCheckNumberCaption"))
        self.gridLayout_2.addWidget(self.lblCurrentCheckNumberCaption, 11, 0, 1, 1)
        self.lblOperatorName = QtGui.QLabel(self.gbECRInfo)
        self.lblOperatorName.setObjectName(_fromUtf8("lblOperatorName"))
        self.gridLayout_2.addWidget(self.lblOperatorName, 4, 2, 1, 3)
        self.lblECRDate = QtGui.QLabel(self.gbECRInfo)
        self.lblECRDate.setObjectName(_fromUtf8("lblECRDate"))
        self.gridLayout_2.addWidget(self.lblECRDate, 6, 2, 1, 3)
        self.lblECRDateCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblECRDateCaption.setObjectName(_fromUtf8("lblECRDateCaption"))
        self.gridLayout_2.addWidget(self.lblECRDateCaption, 6, 0, 1, 2)
        self.lblOperatorCaption = QtGui.QLabel(self.gbECRInfo)
        self.lblOperatorCaption.setObjectName(_fromUtf8("lblOperatorCaption"))
        self.gridLayout_2.addWidget(self.lblOperatorCaption, 4, 0, 1, 2)
        self.horizontalLayout_3 = QtGui.QHBoxLayout()
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        self.edtPassword = QtGui.QLineEdit(self.gbECRInfo)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edtPassword.sizePolicy().hasHeightForWidth())
        self.edtPassword.setSizePolicy(sizePolicy)
        self.edtPassword.setMaxLength(8)
        self.edtPassword.setEchoMode(QtGui.QLineEdit.PasswordEchoOnEdit)
        self.edtPassword.setObjectName(_fromUtf8("edtPassword"))
        self.horizontalLayout_3.addWidget(self.edtPassword)
        self.chkRemeberPassword = QtGui.QCheckBox(self.gbECRInfo)
        self.chkRemeberPassword.setObjectName(_fromUtf8("chkRemeberPassword"))
        self.horizontalLayout_3.addWidget(self.chkRemeberPassword)
        self.gridLayout_2.addLayout(self.horizontalLayout_3, 2, 2, 1, 4)
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.lblDeviceStateIcon = QtGui.QLabel(self.gbECRInfo)
        self.lblDeviceStateIcon.setObjectName(_fromUtf8("lblDeviceStateIcon"))
        self.horizontalLayout.addWidget(self.lblDeviceStateIcon)
        self.lblECRNumber = QtGui.QLabel(self.gbECRInfo)
        self.lblECRNumber.setObjectName(_fromUtf8("lblECRNumber"))
        self.horizontalLayout.addWidget(self.lblECRNumber)
        self.gridLayout_2.addLayout(self.horizontalLayout, 0, 2, 1, 3)
        self.verticalLayout.addWidget(self.gbECRInfo)
        spacerItem = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.gridLayout.addLayout(self.verticalLayout, 0, 2, 2, 1)
        self.buttonBox = QtGui.QDialogButtonBox(CashRegisterWindow)
        self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Close)
        self.buttonBox.setObjectName(_fromUtf8("buttonBox"))
        self.gridLayout.addWidget(self.buttonBox, 4, 1, 1, 2)
        self.tabWidget = QtGui.QTabWidget(CashRegisterWindow)
        self.tabWidget.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
        self.tabRegistration = QtGui.QWidget()
        self.tabRegistration.setObjectName(_fromUtf8("tabRegistration"))
        self.gridLayout_3 = QtGui.QGridLayout(self.tabRegistration)
        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
        self.lblCheckTotalInfo = QtGui.QLabel(self.tabRegistration)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblCheckTotalInfo.sizePolicy().hasHeightForWidth())
        self.lblCheckTotalInfo.setSizePolicy(sizePolicy)
        self.lblCheckTotalInfo.setObjectName(_fromUtf8("lblCheckTotalInfo"))
        self.gridLayout_3.addWidget(self.lblCheckTotalInfo, 13, 0, 1, 3)
        self.gbDiscount = QtGui.QGroupBox(self.tabRegistration)
        self.gbDiscount.setObjectName(_fromUtf8("gbDiscount"))
        self.gridLayout_13 = QtGui.QGridLayout(self.gbDiscount)
        self.gridLayout_13.setObjectName(_fromUtf8("gridLayout_13"))
        self.dsbDiscount = QtGui.QDoubleSpinBox(self.gbDiscount)
        self.dsbDiscount.setDecimals(1)
        self.dsbDiscount.setObjectName(_fromUtf8("dsbDiscount"))
        self.gridLayout_13.addWidget(self.dsbDiscount, 0, 0, 1, 1)
        self.btnApplyDiscount = QtGui.QPushButton(self.gbDiscount)
        self.btnApplyDiscount.setObjectName(_fromUtf8("btnApplyDiscount"))
        self.gridLayout_13.addWidget(self.btnApplyDiscount, 1, 0, 1, 1)
        self.gridLayout_3.addWidget(self.gbDiscount, 5, 2, 1, 1)
        spacerItem1 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem1, 11, 2, 1, 1)
        self.gbCheckType = QtGui.QGroupBox(self.tabRegistration)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gbCheckType.sizePolicy().hasHeightForWidth())
        self.gbCheckType.setSizePolicy(sizePolicy)
        self.gbCheckType.setObjectName(_fromUtf8("gbCheckType"))
        self.gridLayout_10 = QtGui.QGridLayout(self.gbCheckType)
        self.gridLayout_10.setObjectName(_fromUtf8("gridLayout_10"))
        self.rbAnnulate = QtGui.QRadioButton(self.gbCheckType)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rbAnnulate.sizePolicy().hasHeightForWidth())
        self.rbAnnulate.setSizePolicy(sizePolicy)
        self.rbAnnulate.setObjectName(_fromUtf8("rbAnnulate"))
        self.gridLayout_10.addWidget(self.rbAnnulate, 2, 0, 1, 1)
        self.rbRegistration = QtGui.QRadioButton(self.gbCheckType)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rbRegistration.sizePolicy().hasHeightForWidth())
        self.rbRegistration.setSizePolicy(sizePolicy)
        self.rbRegistration.setChecked(True)
        self.rbRegistration.setObjectName(_fromUtf8("rbRegistration"))
        self.gridLayout_10.addWidget(self.rbRegistration, 0, 0, 1, 1)
        self.rbReturn = QtGui.QRadioButton(self.gbCheckType)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rbReturn.sizePolicy().hasHeightForWidth())
        self.rbReturn.setSizePolicy(sizePolicy)
        self.rbReturn.setObjectName(_fromUtf8("rbReturn"))
        self.gridLayout_10.addWidget(self.rbReturn, 1, 0, 1, 1)
        self.gridLayout_3.addWidget(self.gbCheckType, 0, 2, 4, 1)
        self.progressBar = QtGui.QProgressBar(self.tabRegistration)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setMaximum(1)
        self.progressBar.setProperty("value", -1)
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressBar.setObjectName(_fromUtf8("progressBar"))
        self.gridLayout_3.addWidget(self.progressBar, 7, 2, 1, 1)
        self.chkEnableCheckSum = QtGui.QCheckBox(self.tabRegistration)
        self.chkEnableCheckSum.setEnabled(False)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chkEnableCheckSum.sizePolicy().hasHeightForWidth())
        self.chkEnableCheckSum.setSizePolicy(sizePolicy)
        self.chkEnableCheckSum.setChecked(True)
        self.chkEnableCheckSum.setObjectName(_fromUtf8("chkEnableCheckSum"))
        self.gridLayout_3.addWidget(self.chkEnableCheckSum, 4, 2, 1, 1)
        self.label = QtGui.QLabel(self.tabRegistration)
        self.label.setObjectName(_fromUtf8("label"))
        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
        self.tblItems = QtGui.QTableView(self.tabRegistration)
        self.tblItems.setObjectName(_fromUtf8("tblItems"))
        self.gridLayout_3.addWidget(self.tblItems, 1, 0, 11, 2)
        self.lblItemInfo = QtGui.QLabel(self.tabRegistration)
        self.lblItemInfo.setObjectName(_fromUtf8("lblItemInfo"))
        self.gridLayout_3.addWidget(self.lblItemInfo, 9, 2, 1, 1)
        self.btnStartStop = QtGui.QPushButton(self.tabRegistration)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnStartStop.sizePolicy().hasHeightForWidth())
        self.btnStartStop.setSizePolicy(sizePolicy)
        self.btnStartStop.setObjectName(_fromUtf8("btnStartStop"))
        self.gridLayout_3.addWidget(self.btnStartStop, 8, 2, 1, 1)
        self.btnSendMail = QtGui.QPushButton(self.tabRegistration)
        self.btnSendMail.setObjectName(_fromUtf8("btnSendMail"))
        self.gridLayout_3.addWidget(self.btnSendMail, 10, 2, 1, 1)
        self.tabWidget.addTab(self.tabRegistration, _fromUtf8(""))
        self.tabOther = QtGui.QWidget()
        self.tabOther.setObjectName(_fromUtf8("tabOther"))
        self.gridLayout_8 = QtGui.QGridLayout(self.tabOther)
        self.gridLayout_8.setObjectName(_fromUtf8("gridLayout_8"))
        spacerItem2 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem2, 4, 0, 1, 1)
        self.gbClipping = QtGui.QGroupBox(self.tabOther)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gbClipping.sizePolicy().hasHeightForWidth())
        self.gbClipping.setSizePolicy(sizePolicy)
        self.gbClipping.setObjectName(_fromUtf8("gbClipping"))
        self.gridLayout_7 = QtGui.QGridLayout(self.gbClipping)
        self.gridLayout_7.setObjectName(_fromUtf8("gridLayout_7"))
        self.btnFullCut = QtGui.QPushButton(self.gbClipping)
        self.btnFullCut.setObjectName(_fromUtf8("btnFullCut"))
        self.gridLayout_7.addWidget(self.btnFullCut, 1, 0, 1, 1)
        self.btnPartialCut = QtGui.QPushButton(self.gbClipping)
        self.btnPartialCut.setObjectName(_fromUtf8("btnPartialCut"))
        self.gridLayout_7.addWidget(self.btnPartialCut, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.gbClipping, 3, 2, 1, 1)
        self.gbCashMovement = QtGui.QGroupBox(self.tabOther)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gbCashMovement.sizePolicy().hasHeightForWidth())
        self.gbCashMovement.setSizePolicy(sizePolicy)
        self.gbCashMovement.setObjectName(_fromUtf8("gbCashMovement"))
        self.gridLayout_5 = QtGui.QGridLayout(self.gbCashMovement)
        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
        self.cmbCashMovement = QtGui.QComboBox(self.gbCashMovement)
        self.cmbCashMovement.setObjectName(_fromUtf8("cmbCashMovement"))
        self.gridLayout_5.addWidget(self.cmbCashMovement, 1, 0, 1, 1)
        self.btnCashMovementExecute = QtGui.QPushButton(self.gbCashMovement)
        self.btnCashMovementExecute.setObjectName(_fromUtf8("btnCashMovementExecute"))
        self.gridLayout_5.addWidget(self.btnCashMovementExecute, 3, 0, 1, 1)
        self.spbCashMovementAmount = QtGui.QDoubleSpinBox(self.gbCashMovement)
        self.spbCashMovementAmount.setDecimals(3)
        self.spbCashMovementAmount.setMaximum(999999.0)
        self.spbCashMovementAmount.setObjectName(_fromUtf8("spbCashMovementAmount"))
        self.gridLayout_5.addWidget(self.spbCashMovementAmount, 2, 0, 1, 1)
        self.btnOpenCashBox = QtGui.QPushButton(self.gbCashMovement)
        self.btnOpenCashBox.setObjectName(_fromUtf8("btnOpenCashBox"))
        self.gridLayout_5.addWidget(self.btnOpenCashBox, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.gbCashMovement, 1, 2, 2, 1)
        self.btnOpenSession = QtGui.QPushButton(self.tabOther)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnOpenSession.sizePolicy().hasHeightForWidth())
        self.btnOpenSession.setSizePolicy(sizePolicy)
        self.btnOpenSession.setObjectName(_fromUtf8("btnOpenSession"))
        self.gridLayout_8.addWidget(self.btnOpenSession, 0, 2, 1, 1)
        self.gbPrintByTemplate = QtGui.QGroupBox(self.tabOther)
        self.gbPrintByTemplate.setObjectName(_fromUtf8("gbPrintByTemplate"))
        self.gridLayout_14 = QtGui.QGridLayout(self.gbPrintByTemplate)
        self.gridLayout_14.setObjectName(_fromUtf8("gridLayout_14"))
        self.btnPrintByTemplate = CPrintButton(self.gbPrintByTemplate)
        self.btnPrintByTemplate.setObjectName(_fromUtf8("btnPrintByTemplate"))
        self.gridLayout_14.addWidget(self.btnPrintByTemplate, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.gbPrintByTemplate, 0, 1, 2, 1)
        self.gbReport = QtGui.QGroupBox(self.tabOther)
        self.gbReport.setObjectName(_fromUtf8("gbReport"))
        self.gridLayout_4 = QtGui.QGridLayout(self.gbReport)
        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
        self.cmbReportType = QtGui.QComboBox(self.gbReport)
        self.cmbReportType.setObjectName(_fromUtf8("cmbReportType"))
        self.gridLayout_4.addWidget(self.cmbReportType, 0, 0, 1, 1)
        self.btnPrintReport = QtGui.QPushButton(self.gbReport)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnPrintReport.sizePolicy().hasHeightForWidth())
        self.btnPrintReport.setSizePolicy(sizePolicy)
        self.btnPrintReport.setObjectName(_fromUtf8("btnPrintReport"))
        self.gridLayout_4.addWidget(self.btnPrintReport, 1, 0, 1, 1)
        self.gridLayout_8.addWidget(self.gbReport, 0, 0, 2, 1)
        spacerItem3 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem3, 1, 3, 1, 1)
        self.gbExportFilter = QtGui.QGroupBox(self.tabOther)
        self.gbExportFilter.setObjectName(_fromUtf8("gbExportFilter"))
        self.gridLayout_12 = QtGui.QGridLayout(self.gbExportFilter)
        self.gridLayout_12.setObjectName(_fromUtf8("gridLayout_12"))
        self.spbExportSession = QtGui.QSpinBox(self.gbExportFilter)
        self.spbExportSession.setMaximum(2000)
        self.spbExportSession.setObjectName(_fromUtf8("spbExportSession"))
        self.gridLayout_12.addWidget(self.spbExportSession, 1, 1, 1, 1)
        self.ltExportDate = QtGui.QHBoxLayout()
        self.ltExportDate.setObjectName(_fromUtf8("ltExportDate"))
        self.edtExportBegDate = QtGui.QDateEdit(self.gbExportFilter)
        self.edtExportBegDate.setObjectName(_fromUtf8("edtExportBegDate"))
        self.ltExportDate.addWidget(self.edtExportBegDate)
        self.lblExportDateDash = QtGui.QLabel(self.gbExportFilter)
        self.lblExportDateDash.setObjectName(_fromUtf8("lblExportDateDash"))
        self.ltExportDate.addWidget(self.lblExportDateDash)
        self.edtExportEndDate = QtGui.QDateEdit(self.gbExportFilter)
        self.edtExportEndDate.setObjectName(_fromUtf8("edtExportEndDate"))
        self.ltExportDate.addWidget(self.edtExportEndDate)
        spacerItem4 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.ltExportDate.addItem(spacerItem4)
        self.gridLayout_12.addLayout(self.ltExportDate, 0, 1, 1, 5)
        self.chkExportDateEnabled = QtGui.QCheckBox(self.gbExportFilter)
        self.chkExportDateEnabled.setChecked(True)
        self.chkExportDateEnabled.setObjectName(_fromUtf8("chkExportDateEnabled"))
        self.gridLayout_12.addWidget(self.chkExportDateEnabled, 0, 0, 1, 1)
        spacerItem5 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem5, 1, 5, 1, 1)
        self.chkExportSessionEnabled = QtGui.QCheckBox(self.gbExportFilter)
        self.chkExportSessionEnabled.setChecked(True)
        self.chkExportSessionEnabled.setObjectName(_fromUtf8("chkExportSessionEnabled"))
        self.gridLayout_12.addWidget(self.chkExportSessionEnabled, 1, 0, 1, 1)
        self.btnExport = QtGui.QPushButton(self.gbExportFilter)
        self.btnExport.setObjectName(_fromUtf8("btnExport"))
        self.gridLayout_12.addWidget(self.btnExport, 2, 3, 1, 3)
        self.chkExportCheckNumberEnabled = QtGui.QCheckBox(self.gbExportFilter)
        self.chkExportCheckNumberEnabled.setChecked(True)
        self.chkExportCheckNumberEnabled.setObjectName(_fromUtf8("chkExportCheckNumberEnabled"))
        self.gridLayout_12.addWidget(self.chkExportCheckNumberEnabled, 1, 3, 1, 1)
        self.spbExportCheckNumber = QtGui.QSpinBox(self.gbExportFilter)
        self.spbExportCheckNumber.setMaximum(9999)
        self.spbExportCheckNumber.setObjectName(_fromUtf8("spbExportCheckNumber"))
        self.gridLayout_12.addWidget(self.spbExportCheckNumber, 1, 4, 1, 1)
        self.gridLayout_8.addWidget(self.gbExportFilter, 2, 0, 2, 2)
        self.tabWidget.addTab(self.tabOther, _fromUtf8(""))
        self.tabSettings = QtGui.QWidget()
        self.tabSettings.setObjectName(_fromUtf8("tabSettings"))
        self.gridLayout_9 = QtGui.QGridLayout(self.tabSettings)
        self.gridLayout_9.setObjectName(_fromUtf8("gridLayout_9"))
        self.gbExportSettings = QtGui.QGroupBox(self.tabSettings)
        self.gbExportSettings.setCheckable(False)
        self.gbExportSettings.setObjectName(_fromUtf8("gbExportSettings"))
        self.gridLayout_11 = QtGui.QGridLayout(self.gbExportSettings)
        self.gridLayout_11.setObjectName(_fromUtf8("gridLayout_11"))
        self.lblExportDir = QtGui.QLabel(self.gbExportSettings)
        self.lblExportDir.setObjectName(_fromUtf8("lblExportDir"))
        self.gridLayout_11.addWidget(self.lblExportDir, 1, 0, 1, 3)
        self.lblExportFileCodec = QtGui.QLabel(self.gbExportSettings)
        self.lblExportFileCodec.setObjectName(_fromUtf8("lblExportFileCodec"))
        self.gridLayout_11.addWidget(self.lblExportFileCodec, 3, 0, 1, 1)
        self.horizontalLayout_2 = QtGui.QHBoxLayout()
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.edtExportDir = QtGui.QLineEdit(self.gbExportSettings)
        self.edtExportDir.setObjectName(_fromUtf8("edtExportDir"))
        self.horizontalLayout_2.addWidget(self.edtExportDir)
        self.btnExportDirBrowse = QtGui.QToolButton(self.gbExportSettings)
        self.btnExportDirBrowse.setObjectName(_fromUtf8("btnExportDirBrowse"))
        self.horizontalLayout_2.addWidget(self.btnExportDirBrowse)
        self.gridLayout_11.addLayout(self.horizontalLayout_2, 2, 0, 1, 4)
        self.cmbExportFileEncoding = QtGui.QComboBox(self.gbExportSettings)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cmbExportFileEncoding.sizePolicy().hasHeightForWidth())
        self.cmbExportFileEncoding.setSizePolicy(sizePolicy)
        self.cmbExportFileEncoding.setObjectName(_fromUtf8("cmbExportFileEncoding"))
        self.gridLayout_11.addWidget(self.cmbExportFileEncoding, 3, 1, 1, 1)
        self.lblExportFormat = QtGui.QLabel(self.gbExportSettings)
        self.lblExportFormat.setObjectName(_fromUtf8("lblExportFormat"))
        self.gridLayout_11.addWidget(self.lblExportFormat, 3, 2, 1, 1)
        self.cmbExportFormat = QtGui.QComboBox(self.gbExportSettings)
        self.cmbExportFormat.setObjectName(_fromUtf8("cmbExportFormat"))
        self.gridLayout_11.addWidget(self.cmbExportFormat, 3, 3, 1, 1)
        self.chkAutoExportDuringZReport = QtGui.QCheckBox(self.gbExportSettings)
        self.chkAutoExportDuringZReport.setObjectName(_fromUtf8("chkAutoExportDuringZReport"))
        self.gridLayout_11.addWidget(self.chkAutoExportDuringZReport, 0, 0, 1, 4)
        self.lblFileNameLanguage = QtGui.QLabel(self.gbExportSettings)
        self.lblFileNameLanguage.setObjectName(_fromUtf8("lblFileNameLanguage"))
        self.gridLayout_11.addWidget(self.lblFileNameLanguage, 4, 0, 1, 1)
        self.cmbFileNameLanguage = QtGui.QComboBox(self.gbExportSettings)
        self.cmbFileNameLanguage.setObjectName(_fromUtf8("cmbFileNameLanguage"))
        self.gridLayout_11.addWidget(self.cmbFileNameLanguage, 4, 1, 1, 1)
        self.gridLayout_9.addWidget(self.gbExportSettings, 3, 0, 1, 1)
        spacerItem6 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem6, 4, 0, 1, 1)
        spacerItem7 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem7, 3, 1, 1, 1)
        self.chkDoublePrintCheck = QtGui.QCheckBox(self.tabSettings)
        self.chkDoublePrintCheck.setObjectName(_fromUtf8("chkDoublePrintCheck"))
        self.gridLayout_9.addWidget(self.chkDoublePrintCheck, 0, 0, 1, 2)
        self.chkTestMode = QtGui.QCheckBox(self.tabSettings)
        self.chkTestMode.setObjectName(_fromUtf8("chkTestMode"))
        self.gridLayout_9.addWidget(self.chkTestMode, 1, 0, 1, 2)
        self.chkFillPersonDocument = QtGui.QCheckBox(self.tabSettings)
        self.chkFillPersonDocument.setObjectName(_fromUtf8("chkFillPersonDocument"))
        self.gridLayout_9.addWidget(self.chkFillPersonDocument, 2, 0, 1, 2)
        self.tabWidget.addTab(self.tabSettings, _fromUtf8(""))
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 2)

        self.retranslateUi(CashRegisterWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(_fromUtf8("clicked(QAbstractButton*)")), CashRegisterWindow.accept)
        QtCore.QObject.connect(self.rbRegistration, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.chkEnableCheckSum.setDisabled)
        QtCore.QMetaObject.connectSlotsByName(CashRegisterWindow)
        CashRegisterWindow.setTabOrder(self.buttonBox, self.tabWidget)
        CashRegisterWindow.setTabOrder(self.tabWidget, self.tblItems)
        CashRegisterWindow.setTabOrder(self.tblItems, self.rbRegistration)
        CashRegisterWindow.setTabOrder(self.rbRegistration, self.rbAnnulate)
        CashRegisterWindow.setTabOrder(self.rbAnnulate, self.chkEnableCheckSum)
        CashRegisterWindow.setTabOrder(self.chkEnableCheckSum, self.dsbDiscount)
        CashRegisterWindow.setTabOrder(self.dsbDiscount, self.btnApplyDiscount)
        CashRegisterWindow.setTabOrder(self.btnApplyDiscount, self.btnStartStop)
        CashRegisterWindow.setTabOrder(self.btnStartStop, self.edtLogging)
        CashRegisterWindow.setTabOrder(self.edtLogging, self.cmbReportType)
        CashRegisterWindow.setTabOrder(self.cmbReportType, self.btnPrintReport)
        CashRegisterWindow.setTabOrder(self.btnPrintReport, self.btnPrintByTemplate)
        CashRegisterWindow.setTabOrder(self.btnPrintByTemplate, self.btnOpenSession)
        CashRegisterWindow.setTabOrder(self.btnOpenSession, self.btnOpenCashBox)
        CashRegisterWindow.setTabOrder(self.btnOpenCashBox, self.cmbCashMovement)
        CashRegisterWindow.setTabOrder(self.cmbCashMovement, self.spbCashMovementAmount)
        CashRegisterWindow.setTabOrder(self.spbCashMovementAmount, self.btnCashMovementExecute)
        CashRegisterWindow.setTabOrder(self.btnCashMovementExecute, self.chkExportDateEnabled)
        CashRegisterWindow.setTabOrder(self.chkExportDateEnabled, self.edtExportBegDate)
        CashRegisterWindow.setTabOrder(self.edtExportBegDate, self.edtExportEndDate)
        CashRegisterWindow.setTabOrder(self.edtExportEndDate, self.chkExportSessionEnabled)
        CashRegisterWindow.setTabOrder(self.chkExportSessionEnabled, self.spbExportSession)
        CashRegisterWindow.setTabOrder(self.spbExportSession, self.btnExport)
        CashRegisterWindow.setTabOrder(self.btnExport, self.btnPartialCut)
        CashRegisterWindow.setTabOrder(self.btnPartialCut, self.btnFullCut)
        CashRegisterWindow.setTabOrder(self.btnFullCut, self.chkTestMode)
        CashRegisterWindow.setTabOrder(self.chkTestMode, self.chkFillPersonDocument)
        CashRegisterWindow.setTabOrder(self.chkFillPersonDocument, self.chkAutoExportDuringZReport)
        CashRegisterWindow.setTabOrder(self.chkAutoExportDuringZReport, self.edtExportDir)
        CashRegisterWindow.setTabOrder(self.edtExportDir, self.cmbExportFileEncoding)
        CashRegisterWindow.setTabOrder(self.cmbExportFileEncoding, self.cmbFileNameLanguage)
        CashRegisterWindow.setTabOrder(self.cmbFileNameLanguage, self.cmbExportFormat)
        CashRegisterWindow.setTabOrder(self.cmbExportFormat, self.btnExportDirBrowse)
        CashRegisterWindow.setTabOrder(self.btnExportDirBrowse, self.edtPassword)
        CashRegisterWindow.setTabOrder(self.edtPassword, self.chkRemeberPassword)
        CashRegisterWindow.setTabOrder(self.chkRemeberPassword, self.btnBrowseECR)

    def retranslateUi(self, CashRegisterWindow):
        CashRegisterWindow.setWindowTitle(_translate("CashRegisterWindow", "Менеджер ККМ", None))
        self.gbLogging.setTitle(_translate("CashRegisterWindow", "Служебный вывод", None))
        self.edtLogging.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Список операций, производимых по кассе за текущий сеанс <span style=\" font-style:italic;\">(очищается после закрытия окна)</span>.</p></body></html>", None))
        self.edtLogging.setPlainText(_translate("CashRegisterWindow", "Вывод ошибок", None))
        self.gbECRInfo.setTitle(_translate("CashRegisterWindow", "ККМ", None))
        self.lblPassword.setText(_translate("CashRegisterWindow", "Пароль:", None))
        self.lblModeName.setText(_translate("CashRegisterWindow", "<Имя режима>", None))
        self.lblECRNumberCaption.setText(_translate("CashRegisterWindow", "Номер ККМ:", None))
        self.lblFiscalEnabledStateCaption.setText(_translate("CashRegisterWindow", "Фискал.:", None))
        self.lblFiscalEnabledState.setText(_translate("CashRegisterWindow", "<ВКЛ/ВЫКЛ>", None))
        self.btnBrowseECR.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии открывается окно настроек драйвера ККМ.</p></body></html>", None))
        self.btnBrowseECR.setText(_translate("CashRegisterWindow", "...", None))
        self.lblModeCaption.setText(_translate("CashRegisterWindow", "Режим:", None))
        self.lblDriverNameCaption.setText(_translate("CashRegisterWindow", "Драйвер:", None))
        self.lblModelCaption.setText(_translate("CashRegisterWindow", "Модель:", None))
        self.lblDriverName.setText(_translate("CashRegisterWindow", "<Имя драйвера>", None))
        self.lblModel.setText(_translate("CashRegisterWindow", "<Код и имя модели>", None))
        self.lblINN.setText(_translate("CashRegisterWindow", "<001122334455>", None))
        self.lblINNCaption.setText(_translate("CashRegisterWindow", "ИНН:", None))
        self.lblCurrentSession.setText(_translate("CashRegisterWindow", "<Смена>", None))
        self.lblCurrentCheckNumber.setText(_translate("CashRegisterWindow", "<Номер>", None))
        self.lblCurrentSessionCaption.setText(_translate("CashRegisterWindow", "Смена:", None))
        self.lblCurrentCheckNumberCaption.setText(_translate("CashRegisterWindow", "Номер тек. чека:", None))
        self.lblOperatorName.setText(_translate("CashRegisterWindow", "<Имя/номер оператора>", None))
        self.lblECRDate.setText(_translate("CashRegisterWindow", "<dd.mm.yyyy>", None))
        self.lblECRDateCaption.setText(_translate("CashRegisterWindow", "Дата ККМ:", None))
        self.lblOperatorCaption.setText(_translate("CashRegisterWindow", "Оператор:", None))
        self.edtPassword.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Пароль оператора/кассира ККМ.</p><p><span style=\" font-weight:600;\">Примечание:</span> данный пароль используется для переходов в различные режимы при каждом действии с кассой, поэтому у оператора/ кассира, чей пароль введен, должны быть права на те операции, которые он собирается выполнять с ККМ.</p></body></html>", None))
        self.chkRemeberPassword.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Сохранить введеный пароль.</p></body></html>", None))
        self.chkRemeberPassword.setText(_translate("CashRegisterWindow", "Запомнить", None))
        self.lblDeviceStateIcon.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Индикатор обращения к кассовому аппарату (ККМ).</p><p><span style=\" color:#ff0000;\">Красный</span> - ККМ не используется в данный момент.</p><p><span style=\" color:#00aa00;\">Зеленый</span> - Идет обмен данными с ККМ.</p><p><span style=\" font-weight:600;\">Примечание:</span> в момент обращения к кассе (метка зеленого цвета) нельзя получить к ней доступ из других программ, поэтому доступ к кассе происходит только в момент выполнения конкретных операций, чтобы в остальное время ККМ было доступно для других программ.</p></body></html>", None))
        self.lblDeviceStateIcon.setText(_translate("CashRegisterWindow", "вкл", None))
        self.lblECRNumber.setText(_translate("CashRegisterWindow", "<Номер ККМ>", None))
        self.lblCheckTotalInfo.setText(_translate("CashRegisterWindow", "<Итоговая информация по чеку>", None))
        self.gbDiscount.setTitle(_translate("CashRegisterWindow", "Скидка", None))
        self.dsbDiscount.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Устанавливает размер применяемой процентной скидки.</p></body></html>", None))
        self.dsbDiscount.setSuffix(_translate("CashRegisterWindow", "%", None))
        self.btnApplyDiscount.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии выбранная скидка применяется ко всем элементам будущего чека.</p><p><span style=\" font-style:italic;\">(Изменения будут отражены в таблице элементов чека)</span></p></body></html>", None))
        self.btnApplyDiscount.setText(_translate("CashRegisterWindow", "Применить скидку", None))
        self.gbCheckType.setTitle(_translate("CashRegisterWindow", "Тип чека", None))
        self.rbAnnulate.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Операция «Аннулирование» используется для аннулирования ошибочно</p><p>пробитого чека после его закрытия (в той же смене, в которой был пробит чек). </p><p><span style=\" font-weight:600;\">Примечание:</span> Регистрация аннулирования не является фискальной операцией, поэтому</p><p>при печати чека с регистрацией аннулирования на фискализированных ПД признак</p><p>фискального режима не печатается. </p><p><span style=\" font-weight:600;\">Внимание!</span> Операции аннулирования не уменьшают сменный итог.</p><p><br/></p><p><span style=\" font-style:italic;\">(Данная операция поддерживается ограниченным числом ККМ)</span></p></body></html>", None))
        self.rbAnnulate.setText(_translate("CashRegisterWindow", "Аннулирование", None))
        self.rbRegistration.setText(_translate("CashRegisterWindow", "Продажа", None))
        self.rbReturn.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Операция «Возврат» регистрирует возврат товара после закрытия смены, в</p><p>которой была зарегистрирована продажа товара. </p><p><span style=\" font-weight:600;\">Примечание:</span> Регистрация возврата не является фискальной операцией, поэтому при</p><p>печати чека с регистрацией возврата на фискализированных ПД признак фискального</p><p>режима не печатается. </p><p><span style=\" font-weight:600;\">Внимание!</span> Операции возврата не уменьшают сменный итог. </p></body></html>", None))
        self.rbReturn.setText(_translate("CashRegisterWindow", "Возврат продажи", None))
        self.chkEnableCheckSum.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При регистрации <span style=\" font-style:italic;\">возврата/анулирования</span> ККМ производит контроль наличности, то есть должно выполняться неравенство: </p><p align=\"center\"><span style=\" font-style:italic;\">x ≤ Пр – Ан – Вз + Вн – Вп</span></p><p>, где </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">x</span> – размер регистрируемого возврата/аннулирования; </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">Пр</span> – сумма регистраций продаж, оплаченных наличными, за смену; </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">Ан</span> – сумма аннулирований, оплаченных наличными, за смену + промежуточная сумма текущего чека (аннулирования); </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">Вз</span> – сумма возвратов, оплаченных наличными, за смену; </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">Вн</span> – сумма внесений денег в кассу за смену; </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">Вп</span> – сумма выплат денег из кассы за смену. </li></ul><p>ККМ позволяет отключить эту проверку (неравенство может нарушаться) с единственным ограничением: ККМ запрещает закрывать наличными чек, в котором присутствуют регистрации без проверки наличности, если после этого нарушится неравенство (при этом в <span style=\" font-style:italic;\">Вз</span>/<span style=\" font-style:italic;\">Ан</span> включен данный чек): </p><p align=\"center\"><span style=\" font-style:italic;\">0 ≤ Пр – Ан – Вз + Вн – Вп</span></p></body></html>", None))
        self.chkEnableCheckSum.setText(_translate("CashRegisterWindow", "Проверять наличность", None))
        self.label.setText(_translate("CashRegisterWindow", "<html><head/><body><p>Цветовая индикация таблицы: Выставлено, <span style=\" color:#008000;\">Оплачено</span>, <span style=\" color:#ff0000;\">Отказано</span></p></body></html>", None))
        self.lblItemInfo.setText(_translate("CashRegisterWindow", "<Элемент не выбран>", None))
        self.btnStartStop.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии будет произведена регистрация нового чека (продажи/возврата/аннулирования), в который будут включены <span style=\" font-weight:600;\">только выбранные</span> в таблице элементы.</p></body></html>", None))
        self.btnStartStop.setText(_translate("CashRegisterWindow", "Выполнить", None))
        self.btnSendMail.setText(_translate("CashRegisterWindow", "Отправить", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabRegistration), _translate("CashRegisterWindow", "Основное", None))
        self.gbClipping.setTitle(_translate("CashRegisterWindow", "Отрезка чековой ленты", None))
        self.btnFullCut.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии производится полная отрезка кассовой ленты.</p></body></html>", None))
        self.btnFullCut.setText(_translate("CashRegisterWindow", "Полная", None))
        self.btnPartialCut.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии производится частичная отрезка кассовой ленты.</p></body></html>", None))
        self.btnPartialCut.setText(_translate("CashRegisterWindow", "Частичная", None))
        self.gbCashMovement.setTitle(_translate("CashRegisterWindow", "Оперции с наличными", None))
        self.cmbCashMovement.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Выбор операции по внесению или изъятию денежных средств.</p></body></html>", None))
        self.btnCashMovementExecute.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии производится регистрация выбранной операции по внесению или изъятию денежных средств.</p></body></html>", None))
        self.btnCashMovementExecute.setText(_translate("CashRegisterWindow", "Выполнить", None))
        self.spbCashMovementAmount.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Размер вносимых или изымаемых из кассы денежных средств.</p></body></html>", None))
        self.spbCashMovementAmount.setPrefix(_translate("CashRegisterWindow", "=", None))
        self.spbCashMovementAmount.setSuffix(_translate("CashRegisterWindow", "руб.", None))
        self.btnOpenCashBox.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии подается команда ККМ «Открыть денежный ящик, подключенный к ККМ», а та, в свою очередь, посылает команду ящику.</p></body></html>", None))
        self.btnOpenCashBox.setText(_translate("CashRegisterWindow", "Открыть ящик", None))
        self.btnOpenSession.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии происходит открытие смены на ККМ.</p><p>Примечание: На некоторых моделях ККМ операция открытия смены производится автоматически с формированием первого чека после отчета с гашением, наприем, модели &quot;ШТРИХ&quot; с суффиксом &quot;-К&quot; в названии модели.</p><p><span style=\" font-weight:600;\">ККМ МЕРКУРИЙ-114.1Ф</span>: открытие смены обязательно. Указанный пароль оператора/кассира действует в течении всей смены, не зависимо от пароля передаваемого для конкретной операции.</p></body></html>", None))
        self.btnOpenSession.setText(_translate("CashRegisterWindow", "Открыть смену", None))
        self.gbPrintByTemplate.setTitle(_translate("CashRegisterWindow", "Печать отчетов", None))
        self.btnPrintByTemplate.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Список доступных шаблонов печати для формирования отчетов по кассе.</p><p>Чтобы шаблон печати попал в этот список, он должен иметь контекст <span style=\" font-weight:600;\">&quot;ecr&quot;</span></p><p><span style=\" font-weight:600;\">Примечание: </span>При печати этих отчетов данные в памяти ККМ не изменяются, но могут подгружаться из ККМ.</p></body></html>", None))
        self.btnPrintByTemplate.setText(_translate("CashRegisterWindow", "Выберите отчет", None))
        self.gbReport.setTitle(_translate("CashRegisterWindow", "Отчеты на кассовую ленту", None))
        self.cmbReportType.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Список доступных для формирования отчетов ККМ.</p><p>После выбора нужного отчета необходимо нажать кнопку &quot;Сформировать&quot; для его формирования.</p><p><span style=\" font-weight:600;\">Внимание!</span> Данные отчеты печатаются на кассовой ленте и некоторые из них могут приводить к закрытию смены и гашению остатка (отчеты с гашением).</p></body></html>", None))
        self.btnPrintReport.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии производит формирование выбранного отчета ККМ.</p></body></html>", None))
        self.btnPrintReport.setText(_translate("CashRegisterWindow", "Сформировать", None))
        self.gbExportFilter.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Блок параметров импорта в файл операций по кассе.</p><p><span style=\" font-weight:600;\">Примечание:</span> экспорт производится на основе данных из базы данных МИС, а не из кассы. Таким образом в файл попадут лишь те операции, которые были выполнены через интерфейс кассы Виста-мед и независимо от того, какая касса сейчас подключена к компьютеру и подключена ли она вообще, с тем лишь условием, что метка &quot;фискализированности&quot; операции должна соответствовать это метке у подключенной ККМ (т.е., если подключена нефискализированная касса, то экспортироваться будут только операции, совершенные через нефискализированные ККМ).</p><p><span style=\" font-weight:600;\">Внимание!</span> В данной версии модуля экспорт будет работать некорректно при использовании нескольких ККМ с одной МИС (базой данных). Т.е. экспортироваться будут операции, совершенные со всех ККМ, а не конкретной.</p></body></html>", None))
        self.gbExportFilter.setTitle(_translate("CashRegisterWindow", "Экспорт операций", None))
        self.spbExportSession.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Номер смены, в которую были совершенны выгружаемые операции.</p></body></html>", None))
        self.edtExportBegDate.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Начало периода, операции по кассе из которого будут выгруженны в файл.</p></body></html>", None))
        self.lblExportDateDash.setText(_translate("CashRegisterWindow", "-", None))
        self.edtExportEndDate.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Конец периода, операции по кассе из которого будут выгруженны в файл.</p></body></html>", None))
        self.chkExportDateEnabled.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Ограничить операции для экспорта по указанному периоду дат.</p></body></html>", None))
        self.chkExportDateEnabled.setText(_translate("CashRegisterWindow", "Период", None))
        self.chkExportSessionEnabled.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Включает импорт операций только по конкретной смене.</p></body></html>", None))
        self.chkExportSessionEnabled.setText(_translate("CashRegisterWindow", "Смена", None))
        self.btnExport.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии будет произведена выгрузка в файл операций по кассе, с учетом выбранных параметров фильтрации.</p></body></html>", None))
        self.btnExport.setText(_translate("CashRegisterWindow", "Выполнить", None))
        self.chkExportCheckNumberEnabled.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Включает экспорт операций только по конкретному чеку.</p></body></html>", None))
        self.chkExportCheckNumberEnabled.setText(_translate("CashRegisterWindow", "Чек №", None))
        self.spbExportCheckNumber.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Номер чека, по которому проводились выгружаемые операции.</p></body></html>", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabOther), _translate("CashRegisterWindow", "Прочее", None))
        self.gbExportSettings.setTitle(_translate("CashRegisterWindow", "Экспорт операций", None))
        self.lblExportDir.setText(_translate("CashRegisterWindow", "Директория для файлов выгрузки", None))
        self.lblExportFileCodec.setText(_translate("CashRegisterWindow", "Кодировка", None))
        self.edtExportDir.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Поле для ввода пути к директории, в которую будут помещаться файлы с результами экспорта операций по кассе.</p></body></html>", None))
        self.btnExportDirBrowse.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>При нажатии открывается диалоговое окно выбора директории, в которую будут помещаться файлы с результами экспорта операций по кассе.</p></body></html>", None))
        self.btnExportDirBrowse.setText(_translate("CashRegisterWindow", "...", None))
        self.cmbExportFileEncoding.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Кодировка файлов с результами экспорта операций по кассе.</p></body></html>", None))
        self.lblExportFormat.setText(_translate("CashRegisterWindow", "Формат", None))
        self.cmbExportFormat.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Формат файлов с результами экспорта операций по кассе.</p></body></html>", None))
        self.chkAutoExportDuringZReport.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Включает автоматическую выгрузку в файл операций по текущей смене при формировани Z-отчета с гашением.</p></body></html>", None))
        self.chkAutoExportDuringZReport.setText(_translate("CashRegisterWindow", "Экспорт текущей смены при формировании Z-отчета", None))
        self.lblFileNameLanguage.setText(_translate("CashRegisterWindow", "Имя файла на", None))
        self.cmbFileNameLanguage.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Список для выбора методики формирования имен файлов с результами экспорта операций по кассе.</p></body></html>", None))
        self.chkDoublePrintCheck.setText(_translate("CashRegisterWindow", "Печатать чек дважды", None))
        self.chkTestMode.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Включение тестового режима работы модуля с кассой.</p><p>В данном режиме модуль обращается не к реальному драйверу ККМ, а ко встроенному в МИС и все операции, проводимые в этом режиме с кассой, носят лишь информативный характер и логируются в базу данных с поменкой тестовой ККМ.</p><p><br/></p><p><span style=\" font-weight:600;\">Внимание! </span>При импорте операций, если к ПК подключенна нефискализированная ККМ или она не подключенна вовсе, будут импортироваться так же и операции, совершенные в тестовом режиме.</p></body></html>", None))
        self.chkTestMode.setText(_translate("CashRegisterWindow", "Тестовый режим работы ККМ", None))
        self.chkFillPersonDocument.setToolTip(_translate("CashRegisterWindow", "<html><head/><body><p>Включает механимз автозаполнения полей документа плательщика/получателя в окне информации об кассовой операции, отображаемом после нажатия кнопки &quot;Выполнить&quot; на вкладке &quot;Основное&quot; и перед непосредственным формированием чека.</p></body></html>", None))
        self.chkFillPersonDocument.setText(_translate("CashRegisterWindow", "По возможности заполнять данные о документе\n"
" плательщика/получателя", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabSettings), _translate("CashRegisterWindow", "Настройки", None))

from library.PrintTemplates import CPrintButton
