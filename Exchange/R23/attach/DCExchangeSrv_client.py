##################################################
# file: DCExchangeSrv_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py -b DCExchangeSrv.xml
# 
##################################################

from DCExchangeSrv_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class DCExchangeSrvLocator:
    DCExchangeSrvPort_address = "http://193.242.149.82:9090/EchangeServerTFOMS/DCExchangeSrv"
    def getDCExchangeSrvPortAddress(self):
        return DCExchangeSrvLocator.DCExchangeSrvPort_address
    def getDCExchangeSrvPort(self, url=None, **kw):
        return DCExchangeSrvPortBindingSOAP(url or DCExchangeSrvLocator.DCExchangeSrvPort_address, **kw)

# Methods
class DCExchangeSrvPortBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: SendAttachDoctorSectionInformation
    def SendAttachDoctorSectionInformation(self, request, **kw):
        if isinstance(request, SendAttachDoctorSectionInformation) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendAttachDoctorSectionInformationResponse.typecode)
        return response

    # op: SetLoginAccess
    def SetLoginAccess(self, request, **kw):
        if isinstance(request, SetLoginAccess) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SetLoginAccessResponse.typecode)
        return response

    # op: MakeTestConnect
    def MakeTestConnect(self, request, **kw):
        if isinstance(request, MakeTestConnect) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(MakeTestConnectResponse.typecode)
        return response

    # op: GetRealReservedBedList
    def GetRealReservedBedList(self, request, **kw):
        if isinstance(request, GetRealReservedBedList) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetRealReservedBedListResponse.typecode)
        return response

    # op: GetFreeKDInformation
    def GetFreeKDInformation(self, request, **kw):
        if isinstance(request, GetFreeKDInformation) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFreeKDInformationResponse.typecode)
        return response

    # op: GetFreeKDInformationByKPK
    def GetFreeKDInformationByKPK(self, request, **kw):
        if isinstance(request, GetFreeKDInformationByKPK) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFreeKDInformationByKPKResponse.typecode)
        return response

    # op: GetFreeKDInformationByMO
    def GetFreeKDInformationByMO(self, request, **kw):
        if isinstance(request, GetFreeKDInformationByMO) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFreeKDInformationByMOResponse.typecode)
        return response

    # op: GetFreeKDInformationByKPKMO
    def GetFreeKDInformationByKPKMO(self, request, **kw):
        if isinstance(request, GetFreeKDInformationByKPKMO) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFreeKDInformationByKPKMOResponse.typecode)
        return response

    # op: SendTryFreeBed
    def SendTryFreeBed(self, request, **kw):
        if isinstance(request, SendTryFreeBed) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendTryFreeBedResponse.typecode)
        return response

    # op: SendTryCancelBed
    def SendTryCancelBed(self, request, **kw):
        if isinstance(request, SendTryCancelBed) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendTryCancelBedResponse.typecode)
        return response

    # op: SendReservedBedUrgently
    def SendReservedBedUrgently(self, request, **kw):
        if isinstance(request, SendReservedBedUrgently) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendReservedBedUrgentlyResponse.typecode)
        return response

    # op: SendTryAssertReservedBed
    def SendTryAssertReservedBed(self, request, **kw):
        if isinstance(request, SendTryAssertReservedBed) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendTryAssertReservedBedResponse.typecode)
        return response

    # op: GetReservedBedStatus
    def GetReservedBedStatus(self, request, **kw):
        if isinstance(request, GetReservedBedStatus) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetReservedBedStatusResponse.typecode)
        return response

    # op: SendTryReservedBed
    def SendTryReservedBed(self, request, **kw):
        if isinstance(request, SendTryReservedBed) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendTryReservedBedResponse.typecode)
        return response

    # op: GetKDInformationByKPKMO
    def GetKDInformationByKPKMO(self, request, **kw):
        if isinstance(request, GetKDInformationByKPKMO) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetKDInformationByKPKMOResponse.typecode)
        return response

    # op: GetKDInformationByMO
    def GetKDInformationByMO(self, request, **kw):
        if isinstance(request, GetKDInformationByMO) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetKDInformationByMOResponse.typecode)
        return response

    # op: GetKDInformationByKpk
    def GetKDInformationByKpk(self, request, **kw):
        if isinstance(request, GetKDInformationByKpk) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetKDInformationByKpkResponse.typecode)
        return response

    # op: GetKDInformationPDG
    def GetKDInformationPDG(self, request, **kw):
        if isinstance(request, GetKDInformationPDG) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetKDInformationPDGResponse.typecode)
        return response

    # op: GetKDInformationLDS
    def GetKDInformationLDS(self, request, **kw):
        if isinstance(request, GetKDInformationLDS) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetKDInformationLDSResponse.typecode)
        return response

    # op: GetKDInformation
    def GetKDInformation(self, request, **kw):
        if isinstance(request, GetKDInformation) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetKDInformationResponse.typecode)
        return response

    # op: GetOrdersLeaveHospitalPDG
    def GetOrdersLeaveHospitalPDG(self, request, **kw):
        if isinstance(request, GetOrdersLeaveHospitalPDG) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersLeaveHospitalPDGResponse.typecode)
        return response

    # op: GetOrdersLeaveHospitalLDS
    def GetOrdersLeaveHospitalLDS(self, request, **kw):
        if isinstance(request, GetOrdersLeaveHospitalLDS) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersLeaveHospitalLDSResponse.typecode)
        return response

    # op: GetOrdersLeaveHospital
    def GetOrdersLeaveHospital(self, request, **kw):
        if isinstance(request, GetOrdersLeaveHospital) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersLeaveHospitalResponse.typecode)
        return response

    # op: GetOrdersNullificationPDG
    def GetOrdersNullificationPDG(self, request, **kw):
        if isinstance(request, GetOrdersNullificationPDG) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersNullificationPDGResponse.typecode)
        return response

    # op: GetOrdersNullificationLDS
    def GetOrdersNullificationLDS(self, request, **kw):
        if isinstance(request, GetOrdersNullificationLDS) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersNullificationLDSResponse.typecode)
        return response

    # op: GetOrdersNullification
    def GetOrdersNullification(self, request, **kw):
        if isinstance(request, GetOrdersNullification) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersNullificationResponse.typecode)
        return response

    # op: GetOrdersHospitalUrgentlyPDG
    def GetOrdersHospitalUrgentlyPDG(self, request, **kw):
        if isinstance(request, GetOrdersHospitalUrgentlyPDG) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersHospitalUrgentlyPDGResponse.typecode)
        return response

    # op: GetOrdersHospitalUrgentlyLDS
    def GetOrdersHospitalUrgentlyLDS(self, request, **kw):
        if isinstance(request, GetOrdersHospitalUrgentlyLDS) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersHospitalUrgentlyLDSResponse.typecode)
        return response

    # op: GetOrdersHospitalUrgently
    def GetOrdersHospitalUrgently(self, request, **kw):
        if isinstance(request, GetOrdersHospitalUrgently) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetOrdersHospitalUrgentlyResponse.typecode)
        return response

    # op: GetFactOrdersHospitalPDG
    def GetFactOrdersHospitalPDG(self, request, **kw):
        if isinstance(request, GetFactOrdersHospitalPDG) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFactOrdersHospitalPDGResponse.typecode)
        return response

    # op: GetFactOrdersHospitalLDS
    def GetFactOrdersHospitalLDS(self, request, **kw):
        if isinstance(request, GetFactOrdersHospitalLDS) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFactOrdersHospitalLDSResponse.typecode)
        return response

    # op: GetFactOrdersHospital
    def GetFactOrdersHospital(self, request, **kw):
        if isinstance(request, GetFactOrdersHospital) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFactOrdersHospitalResponse.typecode)
        return response

    # op: GetPlanOrdersClinicPDG
    def GetPlanOrdersClinicPDG(self, request, **kw):
        if isinstance(request, GetPlanOrdersClinicPDG) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetPlanOrdersClinicPDGResponse.typecode)
        return response

    # op: GetPlanOrdersClinicLDS
    def GetPlanOrdersClinicLDS(self, request, **kw):
        if isinstance(request, GetPlanOrdersClinicLDS) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetPlanOrdersClinicLDSResponse.typecode)
        return response

    # op: GetPlanOrdersClinic
    def GetPlanOrdersClinic(self, request, **kw):
        if isinstance(request, GetPlanOrdersClinic) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetPlanOrdersClinicResponse.typecode)
        return response

    # op: SendPlanOrdersClinic
    def SendPlanOrdersClinic(self, request, **kw):
        if isinstance(request, SendPlanOrdersClinic) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendPlanOrdersClinicResponse.typecode)
        return response

    # op: SendFactOrdersHospital
    def SendFactOrdersHospital(self, request, **kw):
        if isinstance(request, SendFactOrdersHospital) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendFactOrdersHospitalResponse.typecode)
        return response

    # op: SendOrdersHospitalUrgently
    def SendOrdersHospitalUrgently(self, request, **kw):
        if isinstance(request, SendOrdersHospitalUrgently) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendOrdersHospitalUrgentlyResponse.typecode)
        return response

    # op: SendOrdersNullification
    def SendOrdersNullification(self, request, **kw):
        if isinstance(request, SendOrdersNullification) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendOrdersNullificationResponse.typecode)
        return response

    # op: SendOrdersLeave
    def SendOrdersLeave(self, request, **kw):
        if isinstance(request, SendOrdersLeave) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendOrdersLeaveResponse.typecode)
        return response

    # op: SendKDInformation
    def SendKDInformation(self, request, **kw):
        if isinstance(request, SendKDInformation) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendKDInformationResponse.typecode)
        return response

    # op: GetAttachInformation
    def GetAttachInformation(self, request, **kw):
        if isinstance(request, GetAttachInformation) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetAttachInformationResponse.typecode)
        return response

    # op: SendAttachDoctorInformation
    def SendAttachDoctorInformation(self, request, **kw):
        if isinstance(request, SendAttachDoctorInformation) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendAttachDoctorInformationResponse.typecode)
        return response

    # op: MakeAttachAction
    def MakeAttachAction(self, request, **kw):
        if isinstance(request, MakeAttachAction) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(MakeAttachActionResponse.typecode)
        return response

    # op: MakeDeAttachAction
    def MakeDeAttachAction(self, request, **kw):
        if isinstance(request, MakeDeAttachAction) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(MakeDeAttachActionResponse.typecode)
        return response

    # op: GetQueryForDeAttachForMO
    def GetQueryForDeAttachForMO(self, request, **kw):
        if isinstance(request, GetQueryForDeAttachForMO) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetQueryForDeAttachForMOResponse.typecode)
        return response

    # op: SendQueryForDeAttachForMO
    def SendQueryForDeAttachForMO(self, request, **kw):
        if isinstance(request, SendQueryForDeAttachForMO) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendQueryForDeAttachForMOResponse.typecode)
        return response

    # op: GetDeAttachByDate
    def GetDeAttachByDate(self, request, **kw):
        if isinstance(request, GetDeAttachByDate) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetDeAttachByDateResponse.typecode)
        return response

    # op: GetAttachListByRange
    def GetAttachListByRange(self, request, **kw):
        if isinstance(request, GetAttachListByRange) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetAttachListByRangeResponse.typecode)
        return response

    # op: GetAttachListByRangeAct
    def GetAttachListByRangeAct(self, request, **kw):
        if isinstance(request, GetAttachListByRangeAct) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetAttachListByRangeActResponse.typecode)
        return response

    # op: GetAttachAgregateSmoMoByDate
    def GetAttachAgregateSmoMoByDate(self, request, **kw):
        if isinstance(request, GetAttachAgregateSmoMoByDate) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetAttachAgregateSmoMoByDateResponse.typecode)
        return response

    # op: SendAttachMoStreetSection
    def SendAttachMoStreetSection(self, request, **kw):
        if isinstance(request, SendAttachMoStreetSection) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(SendAttachMoStreetSectionResponse.typecode)
        return response

    # op: GetAttachMoStreetSection
    def GetAttachMoStreetSection(self, request, **kw):
        if isinstance(request, GetAttachMoStreetSection) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(GetAttachMoStreetSectionResponse.typecode)
        return response

    # op: MakeDeAttachActionCancel
    def MakeDeAttachActionCancel(self, request, **kw):
        if isinstance(request, MakeDeAttachActionCancel) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(MakeDeAttachActionCancelResponse.typecode)
        return response

SendAttachDoctorSectionInformation = GED("http://main.dce/", "SendAttachDoctorSectionInformation").pyclass

SendAttachDoctorSectionInformationResponse = GED("http://main.dce/", "SendAttachDoctorSectionInformationResponse").pyclass

SetLoginAccess = GED("http://main.dce/", "SetLoginAccess").pyclass

SetLoginAccessResponse = GED("http://main.dce/", "SetLoginAccessResponse").pyclass

MakeTestConnect = GED("http://main.dce/", "MakeTestConnect").pyclass

MakeTestConnectResponse = GED("http://main.dce/", "MakeTestConnectResponse").pyclass

GetRealReservedBedList = GED("http://main.dce/", "GetRealReservedBedList").pyclass

GetRealReservedBedListResponse = GED("http://main.dce/", "GetRealReservedBedListResponse").pyclass

GetFreeKDInformation = GED("http://main.dce/", "GetFreeKDInformation").pyclass

GetFreeKDInformationResponse = GED("http://main.dce/", "GetFreeKDInformationResponse").pyclass

GetFreeKDInformationByKPK = GED("http://main.dce/", "GetFreeKDInformationByKPK").pyclass

GetFreeKDInformationByKPKResponse = GED("http://main.dce/", "GetFreeKDInformationByKPKResponse").pyclass

GetFreeKDInformationByMO = GED("http://main.dce/", "GetFreeKDInformationByMO").pyclass

GetFreeKDInformationByMOResponse = GED("http://main.dce/", "GetFreeKDInformationByMOResponse").pyclass

GetFreeKDInformationByKPKMO = GED("http://main.dce/", "GetFreeKDInformationByKPKMO").pyclass

GetFreeKDInformationByKPKMOResponse = GED("http://main.dce/", "GetFreeKDInformationByKPKMOResponse").pyclass

SendTryFreeBed = GED("http://main.dce/", "SendTryFreeBed").pyclass

SendTryFreeBedResponse = GED("http://main.dce/", "SendTryFreeBedResponse").pyclass

SendTryCancelBed = GED("http://main.dce/", "SendTryCancelBed").pyclass

SendTryCancelBedResponse = GED("http://main.dce/", "SendTryCancelBedResponse").pyclass

SendReservedBedUrgently = GED("http://main.dce/", "SendReservedBedUrgently").pyclass

SendReservedBedUrgentlyResponse = GED("http://main.dce/", "SendReservedBedUrgentlyResponse").pyclass

SendTryAssertReservedBed = GED("http://main.dce/", "SendTryAssertReservedBed").pyclass

SendTryAssertReservedBedResponse = GED("http://main.dce/", "SendTryAssertReservedBedResponse").pyclass

GetReservedBedStatus = GED("http://main.dce/", "GetReservedBedStatus").pyclass

GetReservedBedStatusResponse = GED("http://main.dce/", "GetReservedBedStatusResponse").pyclass

SendTryReservedBed = GED("http://main.dce/", "SendTryReservedBed").pyclass

SendTryReservedBedResponse = GED("http://main.dce/", "SendTryReservedBedResponse").pyclass

GetKDInformationByKPKMO = GED("http://main.dce/", "GetKDInformationByKPKMO").pyclass

GetKDInformationByKPKMOResponse = GED("http://main.dce/", "GetKDInformationByKPKMOResponse").pyclass

GetKDInformationByMO = GED("http://main.dce/", "GetKDInformationByMO").pyclass

GetKDInformationByMOResponse = GED("http://main.dce/", "GetKDInformationByMOResponse").pyclass

GetKDInformationByKpk = GED("http://main.dce/", "GetKDInformationByKpk").pyclass

GetKDInformationByKpkResponse = GED("http://main.dce/", "GetKDInformationByKpkResponse").pyclass

GetKDInformationPDG = GED("http://main.dce/", "GetKDInformationPDG").pyclass

GetKDInformationPDGResponse = GED("http://main.dce/", "GetKDInformationPDGResponse").pyclass

GetKDInformationLDS = GED("http://main.dce/", "GetKDInformationLDS").pyclass

GetKDInformationLDSResponse = GED("http://main.dce/", "GetKDInformationLDSResponse").pyclass

GetKDInformation = GED("http://main.dce/", "GetKDInformation").pyclass

GetKDInformationResponse = GED("http://main.dce/", "GetKDInformationResponse").pyclass

GetOrdersLeaveHospitalPDG = GED("http://main.dce/", "GetOrdersLeaveHospitalPDG").pyclass

GetOrdersLeaveHospitalPDGResponse = GED("http://main.dce/", "GetOrdersLeaveHospitalPDGResponse").pyclass

GetOrdersLeaveHospitalLDS = GED("http://main.dce/", "GetOrdersLeaveHospitalLDS").pyclass

GetOrdersLeaveHospitalLDSResponse = GED("http://main.dce/", "GetOrdersLeaveHospitalLDSResponse").pyclass

GetOrdersLeaveHospital = GED("http://main.dce/", "GetOrdersLeaveHospital").pyclass

GetOrdersLeaveHospitalResponse = GED("http://main.dce/", "GetOrdersLeaveHospitalResponse").pyclass

GetOrdersNullificationPDG = GED("http://main.dce/", "GetOrdersNullificationPDG").pyclass

GetOrdersNullificationPDGResponse = GED("http://main.dce/", "GetOrdersNullificationPDGResponse").pyclass

GetOrdersNullificationLDS = GED("http://main.dce/", "GetOrdersNullificationLDS").pyclass

GetOrdersNullificationLDSResponse = GED("http://main.dce/", "GetOrdersNullificationLDSResponse").pyclass

GetOrdersNullification = GED("http://main.dce/", "GetOrdersNullification").pyclass

GetOrdersNullificationResponse = GED("http://main.dce/", "GetOrdersNullificationResponse").pyclass

GetOrdersHospitalUrgentlyPDG = GED("http://main.dce/", "GetOrdersHospitalUrgentlyPDG").pyclass

GetOrdersHospitalUrgentlyPDGResponse = GED("http://main.dce/", "GetOrdersHospitalUrgentlyPDGResponse").pyclass

GetOrdersHospitalUrgentlyLDS = GED("http://main.dce/", "GetOrdersHospitalUrgentlyLDS").pyclass

GetOrdersHospitalUrgentlyLDSResponse = GED("http://main.dce/", "GetOrdersHospitalUrgentlyLDSResponse").pyclass

GetOrdersHospitalUrgently = GED("http://main.dce/", "GetOrdersHospitalUrgently").pyclass

GetOrdersHospitalUrgentlyResponse = GED("http://main.dce/", "GetOrdersHospitalUrgentlyResponse").pyclass

GetFactOrdersHospitalPDG = GED("http://main.dce/", "GetFactOrdersHospitalPDG").pyclass

GetFactOrdersHospitalPDGResponse = GED("http://main.dce/", "GetFactOrdersHospitalPDGResponse").pyclass

GetFactOrdersHospitalLDS = GED("http://main.dce/", "GetFactOrdersHospitalLDS").pyclass

GetFactOrdersHospitalLDSResponse = GED("http://main.dce/", "GetFactOrdersHospitalLDSResponse").pyclass

GetFactOrdersHospital = GED("http://main.dce/", "GetFactOrdersHospital").pyclass

GetFactOrdersHospitalResponse = GED("http://main.dce/", "GetFactOrdersHospitalResponse").pyclass

GetPlanOrdersClinicPDG = GED("http://main.dce/", "GetPlanOrdersClinicPDG").pyclass

GetPlanOrdersClinicPDGResponse = GED("http://main.dce/", "GetPlanOrdersClinicPDGResponse").pyclass

GetPlanOrdersClinicLDS = GED("http://main.dce/", "GetPlanOrdersClinicLDS").pyclass

GetPlanOrdersClinicLDSResponse = GED("http://main.dce/", "GetPlanOrdersClinicLDSResponse").pyclass

GetPlanOrdersClinic = GED("http://main.dce/", "GetPlanOrdersClinic").pyclass

GetPlanOrdersClinicResponse = GED("http://main.dce/", "GetPlanOrdersClinicResponse").pyclass

SendPlanOrdersClinic = GED("http://main.dce/", "SendPlanOrdersClinic").pyclass

SendPlanOrdersClinicResponse = GED("http://main.dce/", "SendPlanOrdersClinicResponse").pyclass

SendFactOrdersHospital = GED("http://main.dce/", "SendFactOrdersHospital").pyclass

SendFactOrdersHospitalResponse = GED("http://main.dce/", "SendFactOrdersHospitalResponse").pyclass

SendOrdersHospitalUrgently = GED("http://main.dce/", "SendOrdersHospitalUrgently").pyclass

SendOrdersHospitalUrgentlyResponse = GED("http://main.dce/", "SendOrdersHospitalUrgentlyResponse").pyclass

SendOrdersNullification = GED("http://main.dce/", "SendOrdersNullification").pyclass

SendOrdersNullificationResponse = GED("http://main.dce/", "SendOrdersNullificationResponse").pyclass

SendOrdersLeave = GED("http://main.dce/", "SendOrdersLeave").pyclass

SendOrdersLeaveResponse = GED("http://main.dce/", "SendOrdersLeaveResponse").pyclass

SendKDInformation = GED("http://main.dce/", "SendKDInformation").pyclass

SendKDInformationResponse = GED("http://main.dce/", "SendKDInformationResponse").pyclass

GetAttachInformation = GED("http://main.dce/", "GetAttachInformation").pyclass

GetAttachInformationResponse = GED("http://main.dce/", "GetAttachInformationResponse").pyclass

SendAttachDoctorInformation = GED("http://main.dce/", "SendAttachDoctorInformation").pyclass

SendAttachDoctorInformationResponse = GED("http://main.dce/", "SendAttachDoctorInformationResponse").pyclass

MakeAttachAction = GED("http://main.dce/", "MakeAttachAction").pyclass

MakeAttachActionResponse = GED("http://main.dce/", "MakeAttachActionResponse").pyclass

MakeDeAttachAction = GED("http://main.dce/", "MakeDeAttachAction").pyclass

MakeDeAttachActionResponse = GED("http://main.dce/", "MakeDeAttachActionResponse").pyclass

GetQueryForDeAttachForMO = GED("http://main.dce/", "GetQueryForDeAttachForMO").pyclass

GetQueryForDeAttachForMOResponse = GED("http://main.dce/", "GetQueryForDeAttachForMOResponse").pyclass

SendQueryForDeAttachForMO = GED("http://main.dce/", "SendQueryForDeAttachForMO").pyclass

SendQueryForDeAttachForMOResponse = GED("http://main.dce/", "SendQueryForDeAttachForMOResponse").pyclass

GetDeAttachByDate = GED("http://main.dce/", "GetDeAttachByDate").pyclass

GetDeAttachByDateResponse = GED("http://main.dce/", "GetDeAttachByDateResponse").pyclass

GetAttachListByRange = GED("http://main.dce/", "GetAttachListByRange").pyclass

GetAttachListByRangeResponse = GED("http://main.dce/", "GetAttachListByRangeResponse").pyclass

GetAttachListByRangeAct = GED("http://main.dce/", "GetAttachListByRangeAct").pyclass

GetAttachListByRangeActResponse = GED("http://main.dce/", "GetAttachListByRangeActResponse").pyclass

GetAttachAgregateSmoMoByDate = GED("http://main.dce/", "GetAttachAgregateSmoMoByDate").pyclass

GetAttachAgregateSmoMoByDateResponse = GED("http://main.dce/", "GetAttachAgregateSmoMoByDateResponse").pyclass

SendAttachMoStreetSection = GED("http://main.dce/", "SendAttachMoStreetSection").pyclass

SendAttachMoStreetSectionResponse = GED("http://main.dce/", "SendAttachMoStreetSectionResponse").pyclass

GetAttachMoStreetSection = GED("http://main.dce/", "GetAttachMoStreetSection").pyclass

GetAttachMoStreetSectionResponse = GED("http://main.dce/", "GetAttachMoStreetSectionResponse").pyclass

MakeDeAttachActionCancel = GED("http://main.dce/", "MakeDeAttachActionCancel").pyclass

MakeDeAttachActionCancelResponse = GED("http://main.dce/", "MakeDeAttachActionCancelResponse").pyclass
