##################################################
# file: svcHl7Message_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     C:\pydev\Python25\wsdl2py.bat -b wsdl.txt
# 
##################################################

from ZSI import client
from ZSI.schema import GED

# Locator
class svcHl7MessageLocator:
    Hl7Message_address = "http://80.253.2.25/ig_mu/wshl7_ig_mu.svc"
    def getHl7MessageAddress(self):
        return svcHl7MessageLocator.Hl7Message_address
    def getHl7Message(self, url=None, **kw):
        return bindingHl7MessageSOAP(url or svcHl7MessageLocator.Hl7Message_address, **kw)

# Methods
class bindingHl7MessageSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: opHl7Message
    def opHl7Message(self, request, **kw):
        if isinstance(request, msgHl7MessageIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:#opHl7Message", **kw)
        # no output wsaction
        response = self.binding.Receive(msgHl7MessageOut.typecode)
        return response

msgHl7MessageIn = GED("urn:hl7-org:v3", "hl7Message").pyclass

msgHl7MessageOut = GED("urn:hl7-org:v3", "hl7Message").pyclass
